/*
단위 테스트란 프로그램이나 패키지의 일부 코드를 테스트할 함수를 말한다.
기본 테스트는 특정코드에 단일 매개변수와 리턴 결과만 테스트힘
테이블 테스트는 여러개의 매개변수와 리턴결과를 조합해 테스트함

go test -v를 실행하면 -v 옵션에 의해 상세한 결과가 출력됨

Go의 테스트 도구는 _test.go로 끝나는 파일만을 테스트 코드 파일로 간주
테스트 함수는 외부에 공개되는 함수여야 함
Test라는 이름으로 시작해야하며 testing.T 타입의 포인터를 매개변수로 전달 받아야 함

테스트함수는 해당 테스트가 어떤 이유에서 필요한가에 대해 설명해야함

t.Fatal 메서드는 단위테스트가 실패했음을 보고하며 테스트에 실패한 함수의 실행을 중단함
t.Error, t.Errorf 메서드는 테스트함수의 실행을 중단하지 않음



테이블 테스트

각기 다른 파라메터의 대해 각기 다른 테스트 결과를 리턴하는 코드를 테스트할 때는 테이블 테스트를 사용함
테이블 테스트는 각각 다른 값과 그 결과를 서술한 표를 관리해야 함


모의 호출

인터넷이 연결 되지 않아도 표준라이브러리는 모의 HTTP 웹 호출을 수행하는 httptest 패키지를 제공

*/

/*
godoc 도구
go는 문서화 하는것도 매우 중요하게 여기는데 godoc이라는 도구를 제공


*/

/*벤치마킹

코드의 성능을 테스트
성능에 심각한 문제를 주는 부분을 찾거나 동시성 패턴을 테스트
_test.go 로 파일이름을 해야함
testing 패키지 포함해야함
벤치마크함수는 Benchmark라는 이름으로 시작, testing.B 타입의 포인터를 파라메터로 사용
성능을 측정하려하면 일정시간 반복해서 코드 실행이 필요



*/
/**/
/**/
/**/

