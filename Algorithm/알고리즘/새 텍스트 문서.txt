#include<queue>
#include<cstdio>
using namespace std;
int n, m;
int a[100][100];
int d[100][100];
bool check[100][100];
int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, 1, -1};
void bfs(int a, int b)
{
    check[a][b] = true;
    d[a][b] = 1;
    queue<pair<int, int>> q;
    q.push(make_pair(a, b));
    while(!q.empty())
    {
        int x = q.front().first;
        int y = q.front().second;
        q.pop();
        for(int k=0; k<4; k++){
            int nx = dx[k] + x;
            int ny = dy[k] + y;
            if(0<=nx && nx<n && 0<=ny && ny<m){
                if(a[nx][ny] == 1 && check[nx][ny] == false){
                    q.push(nx, ny);
                    d[nx][ny] = d[x][y] + 1;
                    check[nx][ny] = true;
                }
            }
        }
    }
    printf("%d", d[n-1][m-1]);
}

int main()
{
    scanf("%d %d", &n ,&m);
    for(int i=0; i<n; i++){
        for(int j=0; j<m; j++){
            scanf("%1d", a[i][j]);
            d[i][j] = 0;
        }
    }
    bfs(0, 0);
    
    return 0
}